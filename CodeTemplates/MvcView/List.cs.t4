<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
@model IEnumerable<#= "<" + ViewDataTypeName + ">" #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "<#= ViewName#>";
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}


<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Lista de <#= ViewDataTypeShortName #></h5>
					<div class="ibox-tools">
						@Html.ActionLink("Nuevo", "Create", null, new { @class = "btn btn-primary btn-sm"})
					</div>
                </div>
                <div class="ibox-content">

<table class="table table-striped initdataTable">
	<thead>
    <tr>
<#
IEnumerable<PropertyMetadata> properties = ModelMetadata.Properties;
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // This is a temporary work around until core scaffolding provides support for independent associations.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <th>
            @Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)
        </th>
<#
    }
}
#>
        <th>Acciones</th>
    </tr>
	
		</thead>
	<tbody>
@foreach (var item in Model) {
    <tr>
<#
foreach (PropertyMetadata property in properties) {
    if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // This is a temporary work around until core scaffolding provides support for independent associations.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <td>
            @Html.DisplayFor(modelItem => <#= "item." + GetValueExpression(property) #>)
        </td>
<#
    }
}

string pkName = GetPrimaryKeyName();
if (pkName != null) {
#>
        <td>
			@Html.ActionLink("Detalles", "Details", new { id=item.<#= pkName #> }, new { @class = "btn btn-info btn-sm"})
            @Html.ActionLink("Editar", "Edit", new { id=item.<#= pkName #> }, new { @class = "btn btn-warning btn-sm"})
            @Html.ActionLink("Eliminar", "Delete", new { id=item.<#= pkName #> }, new { @class = "btn btn-danger btn-sm"})
        </td>
<#
} else {
#>
        <td>
			@Html.ActionLink("Detalles", "Details", new { /* id=item.PrimaryKey */ }, new { @class = "btn btn-info btn-sm"})
            @Html.ActionLink("Editar", "Edit", new { /* id=item.PrimaryKey */ }, new { @class = "btn btn-warning btn-sm"})
            @Html.ActionLink("Eliminar", "Delete", new { /* id=item.PrimaryKey */ }, new { @class = "btn btn-danger btn-sm"})
        </td>
<#
}
#>
    </tr>
}
	</tbody>

</table>

                </div>
            </div>
        </div>
    </div>
 </div>

 
@section Styles {
	@Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
}

@section Scripts {
	@Scripts.Render("~/plugins/dataTables")

	<script type="text/javascript">
		$(document).ready(function () {

			$('.initdataTable').DataTable({
				pageLength: 25,
				dom: '<"html5buttons"B>lTfgitp',
				language: {
					"url": "../locales/DatatableSpanish.json"
				},
				buttons: [
					{ extend: 'copy' },
					{ extend: 'csv' },
					{ extend: 'excel', title: 'ExampleFile' },
					{ extend: 'pdf', title: 'ExampleFile' },

					{
						extend: 'print',
						customize: function (win) {
							$(win.document.body).addClass('white-bg');
							$(win.document.body).css('font-size', '10px');

							$(win.document.body).find('table')
								.addClass('compact')
								.css('font-size', 'inherit');
						}
					}
				]

			});



		});

	</script>
}


<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>